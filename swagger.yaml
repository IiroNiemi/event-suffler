swagger: "2.0"
info:
  description: "Vote Events"
  version: "1.0.0"
  title: "Event shuffle"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:3000"
basePath: "/api/v1"
tags:
- name: "event"
  description: "Everything about events"
schemes:
 - "http"
paths:
  /event:
    post:
      tags:
      - "event"
      summary: "Add a new event"
      description: ""
      operationId: "addEvent"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Event object that needs to be added to the db"
        required: true
        schema:
          $ref: "#/definitions/Event"
      responses:
        "405":
          description: "Invalid input"
  /event/list:
    get:
      tags:
      - "event"
      summary: "Get all events"
      description: ""
      operationId: "allEvents"
      produces:
      - "application/xml"
      - "application/json"
      responses:
        "200":
          description: "successful operation"
        "405":
          description: "Invalid input"
  /event/{eventId}:
    get:
      tags:
      - "event"
      summary: "Find event by ID"
      description: "Returns a single event"
      operationId: "getEventById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "eventId"
        in: "path"
        description: "ID of event to return"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Event"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Event not found"
  /event/{eventId}/vote:
    post:
      tags:
      - "event"
      summary: "Add a new vote to event"
      description: ""
      operationId: "addVote"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Vote object that needs to be added to the db"
        required: true
        schema:
          $ref: "#/definitions/Vote"
      - name: "eventId"
        in: "path"
        type: "string"
        required: true
      responses:
        "405":
          description: "Invalid input"
  /event/{eventId}/results:
    get:
      tags:
      - "event"
      summary: "Get event result"
      description: "Results of event"
      operationId: "getEventResults"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "eventId"
        in: "path"
        description: "ID of event to return"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Event not found"
definitions:
  Event:
    type: "object"
    required:
    - "name"
    - "date"
    properties:
      name:
        type: "string"
        example: "birthday party"
      dates:
        type: "array"
        xml:
          name: "dates"
          wrapped: true
        items:
          type: "string"
    xml:
      name: "Event"
  Vote:
    type: "object"
    properties:
      name:
        type: "string"
        description: "Name of the Voter"
      date:
        type: "array"
        xml:
          name: "dates"
          wrapped: true
        items:
          type: "string"
    xml:
      name: "Vote"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"